//------------------------------------------------------------------------------
// <auto-generated>
//     Esse código foi gerado por uma ferramenta.
//
//     As alterações no arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChapecoWebService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://service.nfse.integracao.ws.publica/", ConfigurationName="ChapecoWebService.Services")]
    public interface Services
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/RecepcionarLoteRpsRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/RecepcionarLoteRpsResponse")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string RecepcionarLoteRps(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/RecepcionarLoteRpsRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/RecepcionarLoteRpsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> RecepcionarLoteRpsAsync(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/GerarNfseRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/GerarNfseResponse")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string GerarNfse(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/GerarNfseRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/GerarNfseResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> GerarNfseAsync(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultarSituacaoLoteRpsReques" +
            "t", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultarSituacaoLoteRpsRespon" +
            "se")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ConsultarSituacaoLoteRps(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultarSituacaoLoteRpsReques" +
            "t", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultarSituacaoLoteRpsRespon" +
            "se")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ConsultarSituacaoLoteRpsAsync(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultarNfsePorRpsRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultarNfsePorRpsResponse")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ConsultarNfsePorRps(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultarNfsePorRpsRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultarNfsePorRpsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ConsultarNfsePorRpsAsync(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultarLoteRpsRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultarLoteRpsResponse")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ConsultarLoteRps(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultarLoteRpsRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultarLoteRpsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ConsultarLoteRpsAsync(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultarNfseFaixaRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultarNfseFaixaResponse")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ConsultarNfseFaixa(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultarNfseFaixaRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultarNfseFaixaResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ConsultarNfseFaixaAsync(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/CancelarNfseRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/CancelarNfseResponse")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string CancelarNfse(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/CancelarNfseRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/CancelarNfseResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> CancelarNfseAsync(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/SubstituirNfseRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/SubstituirNfseResponse")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string SubstituirNfse(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/SubstituirNfseRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/SubstituirNfseResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> SubstituirNfseAsync(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/RecepcionarLoteDirRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/RecepcionarLoteDirResponse")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string RecepcionarLoteDir(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/RecepcionarLoteDirRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/RecepcionarLoteDirResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> RecepcionarLoteDirAsync(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultarSituacaoLoteDirReques" +
            "t", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultarSituacaoLoteDirRespon" +
            "se")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ConsultarSituacaoLoteDir(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultarSituacaoLoteDirReques" +
            "t", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultarSituacaoLoteDirRespon" +
            "se")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ConsultarSituacaoLoteDirAsync(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultarLoteDirRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultarLoteDirResponse")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ConsultarLoteDir(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultarLoteDirRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultarLoteDirResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ConsultarLoteDirAsync(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultarDirFaixaRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultarDirFaixaResponse")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ConsultarDirFaixa(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultarDirFaixaRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultarDirFaixaResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ConsultarDirFaixaAsync(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultarDirEnvioRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultarDirEnvioResponse")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ConsultarDirEnvio(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultarDirEnvioRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultarDirEnvioResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ConsultarDirEnvioAsync(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/CancelarDirEnvioRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/CancelarDirEnvioResponse")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string CancelarDirEnvio(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/CancelarDirEnvioRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/CancelarDirEnvioResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> CancelarDirEnvioAsync(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/CartaCorrecaoNfseEnvioRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/CartaCorrecaoNfseEnvioResponse" +
            "")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string CartaCorrecaoNfseEnvio(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/CartaCorrecaoNfseEnvioRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/CartaCorrecaoNfseEnvioResponse" +
            "")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> CartaCorrecaoNfseEnvioAsync(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultarNfseRecebidaRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultarNfseRecebidaResponse")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ConsultarNfseRecebida(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultarNfseRecebidaRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultarNfseRecebidaResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ConsultarNfseRecebidaAsync(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultaDirCanceladasPeriodoRe" +
            "quest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultaDirCanceladasPeriodoRe" +
            "sponse")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ConsultaDirCanceladasPeriodo(string json, string usuario, string senha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultaDirCanceladasPeriodoRe" +
            "quest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultaDirCanceladasPeriodoRe" +
            "sponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ConsultaDirCanceladasPeriodoAsync(string json, string usuario, string senha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultaDirCompetenciaPrestado" +
            "rRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultaDirCompetenciaPrestado" +
            "rResponse")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ConsultaDirCompetenciaPrestador(string json, string usuario, string senha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultaDirCompetenciaPrestado" +
            "rRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultaDirCompetenciaPrestado" +
            "rResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ConsultaDirCompetenciaPrestadorAsync(string json, string usuario, string senha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultaDirPeriodoRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultaDirPeriodoResponse")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ConsultaDirPeriodo(string json, string usuario, string senha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultaDirPeriodoRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultaDirPeriodoResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ConsultaDirPeriodoAsync(string json, string usuario, string senha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultaDirPeriodoPrestadorReq" +
            "uest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultaDirPeriodoPrestadorRes" +
            "ponse")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ConsultaDirPeriodoPrestador(string json, string usuario, string senha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultaDirPeriodoPrestadorReq" +
            "uest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultaDirPeriodoPrestadorRes" +
            "ponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ConsultaDirPeriodoPrestadorAsync(string json, string usuario, string senha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultaDirPeriodoAlteracaoReq" +
            "uest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultaDirPeriodoAlteracaoRes" +
            "ponse")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ConsultaDirPeriodoAlteracao(string json, string usuario, string senha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultaDirPeriodoAlteracaoReq" +
            "uest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultaDirPeriodoAlteracaoRes" +
            "ponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ConsultaDirPeriodoAlteracaoAsync(string json, string usuario, string senha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultaDirPeriodoPrestadorAlt" +
            "eracaoRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultaDirPeriodoPrestadorAlt" +
            "eracaoResponse")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ConsultaDirPeriodoPrestadorAlteracao(string json, string usuario, string senha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultaDirPeriodoPrestadorAlt" +
            "eracaoRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultaDirPeriodoPrestadorAlt" +
            "eracaoResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ConsultaDirPeriodoPrestadorAlteracaoAsync(string json, string usuario, string senha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultarCadastroRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultarCadastroResponse")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ConsultarCadastro(string json, string usuario, string senha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultarCadastroRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultarCadastroResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ConsultarCadastroAsync(string json, string usuario, string senha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultaNfsePeriodoRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultaNfsePeriodoResponse")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ConsultaNfsePeriodo(string json, string usuario, string senha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultaNfsePeriodoRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultaNfsePeriodoResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ConsultaNfsePeriodoAsync(string json, string usuario, string senha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultaNfsePeriodoAlteracaoRe" +
            "quest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultaNfsePeriodoAlteracaoRe" +
            "sponse")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ConsultaNfsePeriodoAlteracao(string json, string usuario, string senha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultaNfsePeriodoAlteracaoRe" +
            "quest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultaNfsePeriodoAlteracaoRe" +
            "sponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ConsultaNfsePeriodoAlteracaoAsync(string json, string usuario, string senha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultaNfseCompetenciaPrestad" +
            "orRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultaNfseCompetenciaPrestad" +
            "orResponse")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ConsultaNfseCompetenciaPrestador(string json, string usuario, string senha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultaNfseCompetenciaPrestad" +
            "orRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultaNfseCompetenciaPrestad" +
            "orResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ConsultaNfseCompetenciaPrestadorAsync(string json, string usuario, string senha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultaNfsePeriodoPrestadorRe" +
            "quest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultaNfsePeriodoPrestadorRe" +
            "sponse")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ConsultaNfsePeriodoPrestador(string json, string usuario, string senha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultaNfsePeriodoPrestadorRe" +
            "quest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultaNfsePeriodoPrestadorRe" +
            "sponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ConsultaNfsePeriodoPrestadorAsync(string json, string usuario, string senha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultaNfsePeriodoPrestadorAl" +
            "teracaoRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultaNfsePeriodoPrestadorAl" +
            "teracaoResponse")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ConsultaNfsePeriodoPrestadorAlteracao(string json, string usuario, string senha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.nfse.integracao.ws.publica/Services/ConsultaNfsePeriodoPrestadorAl" +
            "teracaoRequest", ReplyAction="http://service.nfse.integracao.ws.publica/Services/ConsultaNfsePeriodoPrestadorAl" +
            "teracaoResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ConsultaNfsePeriodoPrestadorAlteracaoAsync(string json, string usuario, string senha);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface ServicesChannel : ChapecoWebService.Services, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class ServicesClient : System.ServiceModel.ClientBase<ChapecoWebService.Services>, ChapecoWebService.Services
    {
        
        /// <summary>
        /// Implemente este método parcial para configurar o ponto de extremidade de serviço.
        /// </summary>
        /// <param name="serviceEndpoint">O ponto de extremidade a ser configurado</param>
        /// <param name="clientCredentials">As credenciais do cliente</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ServicesClient() : 
                base(ServicesClient.GetDefaultBinding(), ServicesClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.ServicesPort.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServicesClient(EndpointConfiguration endpointConfiguration) : 
                base(ServicesClient.GetBindingForEndpoint(endpointConfiguration), ServicesClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServicesClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ServicesClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServicesClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ServicesClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public string RecepcionarLoteRps(string XML)
        {
            return base.Channel.RecepcionarLoteRps(XML);
        }
        
        public System.Threading.Tasks.Task<string> RecepcionarLoteRpsAsync(string XML)
        {
            return base.Channel.RecepcionarLoteRpsAsync(XML);
        }
        
        public string GerarNfse(string XML)
        {
            return base.Channel.GerarNfse(XML);
        }
        
        public System.Threading.Tasks.Task<string> GerarNfseAsync(string XML)
        {
            return base.Channel.GerarNfseAsync(XML);
        }
        
        public string ConsultarSituacaoLoteRps(string XML)
        {
            return base.Channel.ConsultarSituacaoLoteRps(XML);
        }
        
        public System.Threading.Tasks.Task<string> ConsultarSituacaoLoteRpsAsync(string XML)
        {
            return base.Channel.ConsultarSituacaoLoteRpsAsync(XML);
        }
        
        public string ConsultarNfsePorRps(string XML)
        {
            return base.Channel.ConsultarNfsePorRps(XML);
        }
        
        public System.Threading.Tasks.Task<string> ConsultarNfsePorRpsAsync(string XML)
        {
            return base.Channel.ConsultarNfsePorRpsAsync(XML);
        }
        
        public string ConsultarLoteRps(string XML)
        {
            return base.Channel.ConsultarLoteRps(XML);
        }
        
        public System.Threading.Tasks.Task<string> ConsultarLoteRpsAsync(string XML)
        {
            return base.Channel.ConsultarLoteRpsAsync(XML);
        }
        
        public string ConsultarNfseFaixa(string XML)
        {
            return base.Channel.ConsultarNfseFaixa(XML);
        }
        
        public System.Threading.Tasks.Task<string> ConsultarNfseFaixaAsync(string XML)
        {
            return base.Channel.ConsultarNfseFaixaAsync(XML);
        }
        
        public string CancelarNfse(string XML)
        {
            return base.Channel.CancelarNfse(XML);
        }
        
        public System.Threading.Tasks.Task<string> CancelarNfseAsync(string XML)
        {
            return base.Channel.CancelarNfseAsync(XML);
        }
        
        public string SubstituirNfse(string XML)
        {
            return base.Channel.SubstituirNfse(XML);
        }
        
        public System.Threading.Tasks.Task<string> SubstituirNfseAsync(string XML)
        {
            return base.Channel.SubstituirNfseAsync(XML);
        }
        
        public string RecepcionarLoteDir(string XML)
        {
            return base.Channel.RecepcionarLoteDir(XML);
        }
        
        public System.Threading.Tasks.Task<string> RecepcionarLoteDirAsync(string XML)
        {
            return base.Channel.RecepcionarLoteDirAsync(XML);
        }
        
        public string ConsultarSituacaoLoteDir(string XML)
        {
            return base.Channel.ConsultarSituacaoLoteDir(XML);
        }
        
        public System.Threading.Tasks.Task<string> ConsultarSituacaoLoteDirAsync(string XML)
        {
            return base.Channel.ConsultarSituacaoLoteDirAsync(XML);
        }
        
        public string ConsultarLoteDir(string XML)
        {
            return base.Channel.ConsultarLoteDir(XML);
        }
        
        public System.Threading.Tasks.Task<string> ConsultarLoteDirAsync(string XML)
        {
            return base.Channel.ConsultarLoteDirAsync(XML);
        }
        
        public string ConsultarDirFaixa(string XML)
        {
            return base.Channel.ConsultarDirFaixa(XML);
        }
        
        public System.Threading.Tasks.Task<string> ConsultarDirFaixaAsync(string XML)
        {
            return base.Channel.ConsultarDirFaixaAsync(XML);
        }
        
        public string ConsultarDirEnvio(string XML)
        {
            return base.Channel.ConsultarDirEnvio(XML);
        }
        
        public System.Threading.Tasks.Task<string> ConsultarDirEnvioAsync(string XML)
        {
            return base.Channel.ConsultarDirEnvioAsync(XML);
        }
        
        public string CancelarDirEnvio(string XML)
        {
            return base.Channel.CancelarDirEnvio(XML);
        }
        
        public System.Threading.Tasks.Task<string> CancelarDirEnvioAsync(string XML)
        {
            return base.Channel.CancelarDirEnvioAsync(XML);
        }
        
        public string CartaCorrecaoNfseEnvio(string XML)
        {
            return base.Channel.CartaCorrecaoNfseEnvio(XML);
        }
        
        public System.Threading.Tasks.Task<string> CartaCorrecaoNfseEnvioAsync(string XML)
        {
            return base.Channel.CartaCorrecaoNfseEnvioAsync(XML);
        }
        
        public string ConsultarNfseRecebida(string XML)
        {
            return base.Channel.ConsultarNfseRecebida(XML);
        }
        
        public System.Threading.Tasks.Task<string> ConsultarNfseRecebidaAsync(string XML)
        {
            return base.Channel.ConsultarNfseRecebidaAsync(XML);
        }
        
        public string ConsultaDirCanceladasPeriodo(string json, string usuario, string senha)
        {
            return base.Channel.ConsultaDirCanceladasPeriodo(json, usuario, senha);
        }
        
        public System.Threading.Tasks.Task<string> ConsultaDirCanceladasPeriodoAsync(string json, string usuario, string senha)
        {
            return base.Channel.ConsultaDirCanceladasPeriodoAsync(json, usuario, senha);
        }
        
        public string ConsultaDirCompetenciaPrestador(string json, string usuario, string senha)
        {
            return base.Channel.ConsultaDirCompetenciaPrestador(json, usuario, senha);
        }
        
        public System.Threading.Tasks.Task<string> ConsultaDirCompetenciaPrestadorAsync(string json, string usuario, string senha)
        {
            return base.Channel.ConsultaDirCompetenciaPrestadorAsync(json, usuario, senha);
        }
        
        public string ConsultaDirPeriodo(string json, string usuario, string senha)
        {
            return base.Channel.ConsultaDirPeriodo(json, usuario, senha);
        }
        
        public System.Threading.Tasks.Task<string> ConsultaDirPeriodoAsync(string json, string usuario, string senha)
        {
            return base.Channel.ConsultaDirPeriodoAsync(json, usuario, senha);
        }
        
        public string ConsultaDirPeriodoPrestador(string json, string usuario, string senha)
        {
            return base.Channel.ConsultaDirPeriodoPrestador(json, usuario, senha);
        }
        
        public System.Threading.Tasks.Task<string> ConsultaDirPeriodoPrestadorAsync(string json, string usuario, string senha)
        {
            return base.Channel.ConsultaDirPeriodoPrestadorAsync(json, usuario, senha);
        }
        
        public string ConsultaDirPeriodoAlteracao(string json, string usuario, string senha)
        {
            return base.Channel.ConsultaDirPeriodoAlteracao(json, usuario, senha);
        }
        
        public System.Threading.Tasks.Task<string> ConsultaDirPeriodoAlteracaoAsync(string json, string usuario, string senha)
        {
            return base.Channel.ConsultaDirPeriodoAlteracaoAsync(json, usuario, senha);
        }
        
        public string ConsultaDirPeriodoPrestadorAlteracao(string json, string usuario, string senha)
        {
            return base.Channel.ConsultaDirPeriodoPrestadorAlteracao(json, usuario, senha);
        }
        
        public System.Threading.Tasks.Task<string> ConsultaDirPeriodoPrestadorAlteracaoAsync(string json, string usuario, string senha)
        {
            return base.Channel.ConsultaDirPeriodoPrestadorAlteracaoAsync(json, usuario, senha);
        }
        
        public string ConsultarCadastro(string json, string usuario, string senha)
        {
            return base.Channel.ConsultarCadastro(json, usuario, senha);
        }
        
        public System.Threading.Tasks.Task<string> ConsultarCadastroAsync(string json, string usuario, string senha)
        {
            return base.Channel.ConsultarCadastroAsync(json, usuario, senha);
        }
        
        public string ConsultaNfsePeriodo(string json, string usuario, string senha)
        {
            return base.Channel.ConsultaNfsePeriodo(json, usuario, senha);
        }
        
        public System.Threading.Tasks.Task<string> ConsultaNfsePeriodoAsync(string json, string usuario, string senha)
        {
            return base.Channel.ConsultaNfsePeriodoAsync(json, usuario, senha);
        }
        
        public string ConsultaNfsePeriodoAlteracao(string json, string usuario, string senha)
        {
            return base.Channel.ConsultaNfsePeriodoAlteracao(json, usuario, senha);
        }
        
        public System.Threading.Tasks.Task<string> ConsultaNfsePeriodoAlteracaoAsync(string json, string usuario, string senha)
        {
            return base.Channel.ConsultaNfsePeriodoAlteracaoAsync(json, usuario, senha);
        }
        
        public string ConsultaNfseCompetenciaPrestador(string json, string usuario, string senha)
        {
            return base.Channel.ConsultaNfseCompetenciaPrestador(json, usuario, senha);
        }
        
        public System.Threading.Tasks.Task<string> ConsultaNfseCompetenciaPrestadorAsync(string json, string usuario, string senha)
        {
            return base.Channel.ConsultaNfseCompetenciaPrestadorAsync(json, usuario, senha);
        }
        
        public string ConsultaNfsePeriodoPrestador(string json, string usuario, string senha)
        {
            return base.Channel.ConsultaNfsePeriodoPrestador(json, usuario, senha);
        }
        
        public System.Threading.Tasks.Task<string> ConsultaNfsePeriodoPrestadorAsync(string json, string usuario, string senha)
        {
            return base.Channel.ConsultaNfsePeriodoPrestadorAsync(json, usuario, senha);
        }
        
        public string ConsultaNfsePeriodoPrestadorAlteracao(string json, string usuario, string senha)
        {
            return base.Channel.ConsultaNfsePeriodoPrestadorAlteracao(json, usuario, senha);
        }
        
        public System.Threading.Tasks.Task<string> ConsultaNfsePeriodoPrestadorAlteracaoAsync(string json, string usuario, string senha)
        {
            return base.Channel.ConsultaNfsePeriodoPrestadorAlteracaoAsync(json, usuario, senha);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ServicesPort))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Não foi possível encontrar o ponto de extremidade com o nome \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ServicesPort))
            {
                return new System.ServiceModel.EndpointAddress("http://nfse1.publica.inf.br/chapeco_nfse_integracao/Services");
            }
            throw new System.InvalidOperationException(string.Format("Não foi possível encontrar o ponto de extremidade com o nome \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ServicesClient.GetBindingForEndpoint(EndpointConfiguration.ServicesPort);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ServicesClient.GetEndpointAddress(EndpointConfiguration.ServicesPort);
        }
        
        public enum EndpointConfiguration
        {
            
            ServicesPort,
        }
    }
}
