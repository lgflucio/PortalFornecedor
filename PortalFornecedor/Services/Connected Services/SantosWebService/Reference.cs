//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SantosWebService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://producao.ginfes.com.br", ConfigurationName="SantosWebService.ServiceGinfesImpl")]
    public interface ServiceGinfesImpl
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string CancelarNfse(string arg0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> CancelarNfseAsync(string arg0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string CancelarNfseV3(string arg0, string arg1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> CancelarNfseV3Async(string arg0, string arg1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ConsultarLoteRps(string arg0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ConsultarLoteRpsAsync(string arg0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ConsultarLoteRpsV3(string arg0, string arg1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ConsultarLoteRpsV3Async(string arg0, string arg1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ConsultarNfse(string arg0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ConsultarNfseAsync(string arg0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ConsultarNfsePorRps(string arg0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ConsultarNfsePorRpsAsync(string arg0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ConsultarNfsePorRpsV3(string arg0, string arg1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ConsultarNfsePorRpsV3Async(string arg0, string arg1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ConsultarNfseV3(string arg0, string arg1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ConsultarNfseV3Async(string arg0, string arg1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ConsultarSituacaoLoteRps(string arg0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ConsultarSituacaoLoteRpsAsync(string arg0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ConsultarSituacaoLoteRpsV3(string arg0, string arg1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ConsultarSituacaoLoteRpsV3Async(string arg0, string arg1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string RecepcionarLoteRps(string arg0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> RecepcionarLoteRpsAsync(string arg0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string RecepcionarLoteRpsV3(string arg0, string arg1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> RecepcionarLoteRpsV3Async(string arg0, string arg1);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface ServiceGinfesImplChannel : SantosWebService.ServiceGinfesImpl, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class ServiceGinfesImplClient : System.ServiceModel.ClientBase<SantosWebService.ServiceGinfesImpl>, SantosWebService.ServiceGinfesImpl
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ServiceGinfesImplClient() : 
                base(ServiceGinfesImplClient.GetDefaultBinding(), ServiceGinfesImplClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.ServiceGinfesImplPort.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceGinfesImplClient(EndpointConfiguration endpointConfiguration) : 
                base(ServiceGinfesImplClient.GetBindingForEndpoint(endpointConfiguration), ServiceGinfesImplClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceGinfesImplClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ServiceGinfesImplClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceGinfesImplClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ServiceGinfesImplClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceGinfesImplClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public string CancelarNfse(string arg0)
        {
            return base.Channel.CancelarNfse(arg0);
        }
        
        public System.Threading.Tasks.Task<string> CancelarNfseAsync(string arg0)
        {
            return base.Channel.CancelarNfseAsync(arg0);
        }
        
        public string CancelarNfseV3(string arg0, string arg1)
        {
            return base.Channel.CancelarNfseV3(arg0, arg1);
        }
        
        public System.Threading.Tasks.Task<string> CancelarNfseV3Async(string arg0, string arg1)
        {
            return base.Channel.CancelarNfseV3Async(arg0, arg1);
        }
        
        public string ConsultarLoteRps(string arg0)
        {
            return base.Channel.ConsultarLoteRps(arg0);
        }
        
        public System.Threading.Tasks.Task<string> ConsultarLoteRpsAsync(string arg0)
        {
            return base.Channel.ConsultarLoteRpsAsync(arg0);
        }
        
        public string ConsultarLoteRpsV3(string arg0, string arg1)
        {
            return base.Channel.ConsultarLoteRpsV3(arg0, arg1);
        }
        
        public System.Threading.Tasks.Task<string> ConsultarLoteRpsV3Async(string arg0, string arg1)
        {
            return base.Channel.ConsultarLoteRpsV3Async(arg0, arg1);
        }
        
        public string ConsultarNfse(string arg0)
        {
            return base.Channel.ConsultarNfse(arg0);
        }
        
        public System.Threading.Tasks.Task<string> ConsultarNfseAsync(string arg0)
        {
            return base.Channel.ConsultarNfseAsync(arg0);
        }
        
        public string ConsultarNfsePorRps(string arg0)
        {
            return base.Channel.ConsultarNfsePorRps(arg0);
        }
        
        public System.Threading.Tasks.Task<string> ConsultarNfsePorRpsAsync(string arg0)
        {
            return base.Channel.ConsultarNfsePorRpsAsync(arg0);
        }
        
        public string ConsultarNfsePorRpsV3(string arg0, string arg1)
        {
            return base.Channel.ConsultarNfsePorRpsV3(arg0, arg1);
        }
        
        public System.Threading.Tasks.Task<string> ConsultarNfsePorRpsV3Async(string arg0, string arg1)
        {
            return base.Channel.ConsultarNfsePorRpsV3Async(arg0, arg1);
        }
        
        public string ConsultarNfseV3(string arg0, string arg1)
        {
            return base.Channel.ConsultarNfseV3(arg0, arg1);
        }
        
        public System.Threading.Tasks.Task<string> ConsultarNfseV3Async(string arg0, string arg1)
        {
            return base.Channel.ConsultarNfseV3Async(arg0, arg1);
        }
        
        public string ConsultarSituacaoLoteRps(string arg0)
        {
            return base.Channel.ConsultarSituacaoLoteRps(arg0);
        }
        
        public System.Threading.Tasks.Task<string> ConsultarSituacaoLoteRpsAsync(string arg0)
        {
            return base.Channel.ConsultarSituacaoLoteRpsAsync(arg0);
        }
        
        public string ConsultarSituacaoLoteRpsV3(string arg0, string arg1)
        {
            return base.Channel.ConsultarSituacaoLoteRpsV3(arg0, arg1);
        }
        
        public System.Threading.Tasks.Task<string> ConsultarSituacaoLoteRpsV3Async(string arg0, string arg1)
        {
            return base.Channel.ConsultarSituacaoLoteRpsV3Async(arg0, arg1);
        }
        
        public string RecepcionarLoteRps(string arg0)
        {
            return base.Channel.RecepcionarLoteRps(arg0);
        }
        
        public System.Threading.Tasks.Task<string> RecepcionarLoteRpsAsync(string arg0)
        {
            return base.Channel.RecepcionarLoteRpsAsync(arg0);
        }
        
        public string RecepcionarLoteRpsV3(string arg0, string arg1)
        {
            return base.Channel.RecepcionarLoteRpsV3(arg0, arg1);
        }
        
        public System.Threading.Tasks.Task<string> RecepcionarLoteRpsV3Async(string arg0, string arg1)
        {
            return base.Channel.RecepcionarLoteRpsV3Async(arg0, arg1);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ServiceGinfesImplPort))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ServiceGinfesImplPort))
            {
                return new System.ServiceModel.EndpointAddress("http://producao.ginfes.com.br//ServiceGinfesImpl");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ServiceGinfesImplClient.GetBindingForEndpoint(EndpointConfiguration.ServiceGinfesImplPort);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ServiceGinfesImplClient.GetEndpointAddress(EndpointConfiguration.ServiceGinfesImplPort);
        }
        
        public enum EndpointConfiguration
        {
            
            ServiceGinfesImplPort,
        }
    }
}
